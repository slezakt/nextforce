; ============================ AdminUsers =================================
submenu_list = "List of users"
submenu_add = "Add new user"
submenu_deleted = "Deleted users"
submenu_importdata = "Import (XML/CSV)"
submenu_segments = "Segments"
submenu_regions = "Regions"
submenu_channels = "Channels"
edit.submenu_edit = "Edit"
segments.submenu_segmentsedit = "Edit segment"
regions.submenu_regionsedit = "Edit region"
channels.submenu_channelsedit = "Edit channel"
ghost_users = 'Show "ghost users" (users without basic attributes)'

submenu_channels_new = "Add new channel"
submenu_segments_new = "Add new segment"
submenu_regions_new = "Add new region"

heading = "Users"

index.heading = "List of users"
index.empty =  "No users were found."
index.download = "Download CSV file of currently selected users:"
index.download_info = "Note, CSV files are automatically reformatted when opening with Microsoft Excel.
Use XLS export instead or try OpenOffice."

index.description = "Here you can see, filter, sort, edit and export the list of all users in the database."

channels.heading = "Channel management"
channels.empty = "No channels were found."

regions.heading = "Region management"
regions.empty = "No regions were found."

segments.heading = "Segment management"
segments.empty = "No segments were found."

channelsadd.heading = "Add new channel"
channelsedit.heading = "Edit channel"
regionsadd.heading = "Add new region"
regionsedit.heading = "Edit region"
segmentsadd.heading = "Add new segment"
segmentsedit.heading = "Edit segment"

importdata.heading = "Import users"
importdata.to_repair = "Rows of input file to be repaired in CSV:"
importdata.importedAttribs = "Attributes detected during import:"
importdata.pick_file = "Pick a file:"
importdata.fileType = "File type:"
importdata.dryRun = "Dry run (no DB modifications):"
importdata.contactOrigin = "DB & Consent origin (for new users):"
importdata.contactOriginError = "DB & consent origin is missing"
importdata.dryRunOk = "Dry run is OK, would you like save data into database?"
importdata.submit = "Upload a file"
importdata.xlsx_template = "XLSX template for import"
importdata.import_error = "Failed to import users into database."
importdata.warningMessages = "During the import occurs %s warning(s)"
importdata.help.description.title = "Description"
importdata.help.description.body ="
<strong>Attribute names (and types) as stored in database:</strong>
    <ul>
    %s
    </ul>
<br/>
<strong>Special attributes:</strong>
    <ul>
        <li>reps (comma-separated values of representative users ID))</li>
    </ul>
<br/>
<strong>DB & Consent origin</strong> is a mandatory field. It is stored for all new users. For users, who are already in the database, the stored record stays as it is.
"

importdata.form_help = "<p>File must include column names on the first line or row of file.
Values must be of exact type as shown in the following list</p>
<ul>
    <li>boolean - '0' or '1', eventually 't' or 'f'</li>
    <li>integer - number (no floating point)</li>
    <li>character varying - text</li>
    <li>timestamp - date and time with ISO 8601 format - YYYY-MM-DD HH:MM:SS</li>
    <li>gender - 'f' or 'm'</li>
    <li>%1$s - speci√°l symbol for fields that shouldn`t be changed</li>
    <li>pass - undecoded simple plain password</li>
    <li>test, client - if empty, automatic values are assigned</li>
    <li>representative - user id of user that is representative for this user</li>
</ul>
<p>
Note, importing empty cells (or cells containing whitespace) results in assigning NULL value (if available for field).
It is very important to leave unchanged data as they were exported or use special symbol %1$s to protect fields from overwriting.
Fields that are missing in import file will remain unchanged.
</p>
<h4>File encoding:</h4>
<p>When using Microsoft Excel for CSV export, Windows-1250 encoding is used.
If no encoding is determined, UTF-8 is used as default.</p>"

file_not_readable = "Uploaded file is not readable in '%s'."
csv_shortened = "<b>Line: %s</b> - string value in column '%s' is too long, truncated to %d characters."
csv_timestamp = "<b>Line: %1$s (%2$s)</b> - timestamp in column '%4$s' does not conform to ISO 8601."
csv_gender = "<b>Line: %s (%s)</b> - gender ('%s') is not 'm' or 'f'. setting to NULL."
csv_channel = "<b>Line: %s (%s)</b> - channel ('%s') not found, setting to NULL."
csv_region = "<b>Line: %s (%s)</b> - region ('%s') not found, setting to NULL."
csv_segment = "<b>Line: %s (%s)</b> - segment ('%s') not found, setting to NULL."
csv_rep = "<b>Line: %s(%s)</b> - representative ('%s') not found, setting to NULL."
csv_rep_missing = "<b>Line: %s (%s)</b> - representative ('%s') not found, skipping."
csv_exception = "<b>Line %s (%s)</b> was skipped because of error '%s'"
csv_success = "Import was successfully finished. <b>%s</b> new users were added and <b>%s</b> updated."
wrongtype = "Wrong filetype form import. Type: %s"
emptycol = "The source file contains a blank column or column label is missing."
invalid_mail = "Invalid email address: %s"
no_atributes_ins = "No attributes from users table or id was passed data cannot be inserted."
merge_error = "During merge by user %s conflicts with multiple users in DB. Conflicting attributes and their users (user_id): %s"
user_not_found = "During users update the specified user was not found. UserId: %s"
empty_attr_row = "Row with user attributes is empty. UserId: %s"
user_exist = "A user with one of the unique key already exists in the DB. Original exception: %s"
mail_exist = "Email users %s already exists in the DB."
reps_save_error = "Failed to save representatives. IDs: %s"
id_email_miss = "The datafile is missing column ID or email"

xls_error_reading_file = "Error reading XML file."
xls_wrong_format_element = "Wrong XML file format. Missing element: '%s'."

first_name = "Name"
last_name = "Surname"
degree_before = "Degree (before name)"
degree_after = "Degree (after name)"
email = "E-mail"
group = "Group"
created = "Created"

id = "Id"
target = "Target"
client = "Client"
test = "Test"
representative = "Representative"
added = "Added"
deleted = "Deleted"
unsubscribed = "Unsubscribed from mailing"
user_attribs = "User attributes"
option_yes = 'yes'
contact_origin = "DB & Consent origin"
option_no = 'no'

added_help = "Here you can set the string for filtering by creation date<br />
e.g. > '2008-12-05' = users added after 2008-12-05.<br />
e.g. between '2008-01-05' and '2008-05-05' = users added <br />
between these days"

group_help = "Here you can set groups delimited by spaces.<br />
e.g. 2,4 = users from groups 2 and 4.<br />
representative = users from group representative.<br />
String NULL find users without a group. <br/>
The sign % means any string and you can use it as a part of the grup name."

set_filter = "set filter"
destroy_filter = "reset"

edit.heading = "Edit user"
edit.action_back = "back"
edit.action_delete = "delete user"
edit.action_renew = "renew user"
edit.repImgTitle="Image representative (.png)"

newuser.action_back = "back"

gender = "Gender"
male = "Male"
female = "Female"
notspecified = "not specified"
presentations_desc = "Presentations that this representative will see in the inRep application.
    Another way to connect presentations with users or representatives is through segments.
    Note that any binding here causes that no connection based on segments will be derived
    for given representative (representative with any direct binding to presentations will
    not see the presentations connected to his users by segments)."
segment = "Segment"
region = "Region"
channel = "Channel"
presentantions = "Presentantions"
login = "Login"
password = "Password"
password_repeat = "Password again"
authcode = "Authorization code"
is_rep = "Is representative"
selfregistered = "Registration on frontend"
send_emails = "Send emails"
send_nps = "Send NPS"

bad_addr = "Bad address"
option_yes = "yes"
option_no = "no"
no_action = "no action"
reset = "Reset"
unreset = "Set"
submit = "Save"

action_edit = "edit"
action_delete = "delete"
action_subscribe = "cancel subscribe"
action_renew = "renew"
action = "Action"

code="Code"
code_web = "Web"
code_colleague = "Colleague"

password_mismatch = "Password mismatch."
validators.invalid_email = "Invalid email adress."
validators.duplicate = "User already exists in databaze."
validators.notfound = "User not found."


validators.loginnotunique = "This login already exists, choose a different one."
validators.authcodenotunique = "This authcode already exists, choose a different one."
validators.emailnotunique = "This email address is already taken."
validators.isempty = "Field is empty"
validators.tooshort = "Value must be at least %min% characters long"
validators.toolong = "Value must not be more than %max% characters long"
validators.notalnum = "Login must be composed of letters and numbers only"
validators.notalpha = "Name must be composed of alphabet characters"
validators.password = "Only alphanumeric and special characters -._* are allowed"
validators.passwordmismatch = "Passwords are not same"
validators.invalidpassword = "Password is invalid"
validators.wrongdateformat = "Wrong date format. Expected '%s'."

edit.notvalid = "Invalid form data."
edit.repImgTitle="Image of representative (.png)"
edit.removeRepImgConfirm = "Are you sure you want to remove image of representative?"
edit.removeRepImgRemoved = "Image of representative was removed"

submit = "Add new user"
newuser.notvalid = "Invalid form data."
newuser.heading = "New user"
newuser.saved = "Data were saved."
newuser.notsaved = "Problem when saving data."

name = "Name"
submit_send = "Send"

index.confirmdelete = "Are you sure you want to delete user '$name $surname'?"
index.confirmtest = "Are you sure you want to change 'test' group for user '$name $surname'?"
index.confirmclient = "Are you sure you want to change 'client' group for user '$name $surname'?"
index.confirmtarget = "Are you sure you want to change 'target' group for user '$name $surname'?"
index.confirmsend_emails = "Are you sure you want to toggle sending emails for user '$name $surname'?"
index.confirmsubscribe = "Are you sure you want to subscribe emailing for user '$name $surname'?"
index.confirmrenew = "Are you sure you want to renew user '$name $surname'?"

update.error = "Field %s not updated for user %s."
update.success = "Field %s successfully updated for user %s."

delete.notdeleted = "User %s was not deleted."
delete.deleted = "User %s was successfully deleted."

renew.error = "User %s wasn't restored."
renew.success = "User %s was successfully restored."

subscribe.error = "User %s wasn't subscribed to emailing."
subscribe.success = "User %s was subscribed to emailing."

edit.submit = "Save"
edit.saved = "User %s was stored."
edit.notsaved = "User %s was not stored."

; Sprava segmentu
segments.name="Segment name"
segments.submit="Save"
segments.confirmdelete = "Are you sure you want to delete segment '$name'?"
segments.validators.isempty = "Name can not be empty."
segments.validators.tooshort = "Name is too short."
segments.validators.notoken = " Please save it again."
segments.notfound = "No segments were found."
segments.saved = "Data were saved."
segments.notsaved = "Problem when saving data."
segments.deleted = "Data were deleted."
segments.notdeleted = "Problem when deleting data."

; Sprava region
regions.name="Region name"
regions.submit="Save"
regions.confirmdelete = "Are you sure you want to delete region '$name'?"
regions.validators.isempty = "Name can not be empty."
regions.validators.tooshort = "Name is too short."
regions.validators.notoken = " Please save it again."
regions.notfound = "No regions were found."
regions.saved = "Data were saved."
regions.notsaved = "Problem when saving data."
regions.deleted = "Data were deleted."
regions.notdeleted = "Problem when deleting data."

; Sprava kanalu
channels.name="Channel name"
channels.submit="Save"
channels.confirmdelete = "Are you sure you want to delete channel '$name'?"
channels.validators.isempty = "Name can not be empty."
channels.validators.tooshort = "Name is too short."
channels.validators.notoken = " Please save it again."
channels.notfound = "No channels were found."
channels.saved = "Data were saved."
channels.notsaved = "Problem when saving data."
channels.deleted = "Data were deleted."
channels.notdeleted = "Problem when deleting data."

anonymization.heading = "User anonymization"
anonymization.submenu_anonymization = "Anonymization"
anonymization.submit_form = "Anonymize"
anonymization.success = "Data of user with ID %s was anonymized."
anonymization.error = "Unable to anonymize data of user with ID %s."
anonymization.confirm = "Are you sure you want to anonymize person data of user:"

