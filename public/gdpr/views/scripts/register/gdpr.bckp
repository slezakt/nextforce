<?
$session = Zend_Registry::get('session');
$db = Zend_Registry::get('db');

// Najdeme seznam reprezentantu
$sel = new Zend_Db_Select($db);
$sel->from('users', array('name', 'surname', 'id'))
    ->where('is_rep')
    ->where('deleted IS NULL')
    ->where('unsubscribed IS NULL')
    ->order(array('surname', 'name', 'id'));
$reps = $db->fetchAll($sel);
$repsSel = array('' => '- vyberte -');
foreach($reps as $rep){
    $repsSel[$rep['id']] = join(' ', array($rep['name'], $rep['surname']));
}

$povolani = array('','Lékař','Lékárník','Student medicíny','Student farmacie','Nelékařské profese');
$states = array('','Česká republika','Slovenská republika');
$specializations = array('','Alergolog','Androlog','Anesteziolog','Angiolog','Biochemik','Chirurg','Dermatovenerolog','Dětský lékař','Diabetolog',
	'Diagnostik','Endokrinolog','Epidemiolog','Foniatrie','Gastroenterolog','Genetik','Geriatr', 'Gynekolog','Hematolog','Infektolog', 'Internista','Kardiolog','Klinická farmakologie',
	'Lékař urgentní medicíny','Mikrobiolog','Nefrolog', 'Neonatolog','Neurolog','Nutriční specialista', 'Obezitolog','Oční lékař','Onkolog','Ortoped','Patolog','Plicní lékař',
	'Pracovní lékař','Psychiatr','Psychosomatika','Radiolog','Rehabilitační lékař','Revmatolog','Sexuolog','Stomatolog','Urolog','Ušní, nosní, krční (ORL)','Všeobecný praktický lékař pro dospělé');
$odbornost = array('','Nemocniční lékárník','Klinický farmaceut','Lékárník ve veřejné lékárně','jiné');
$fakulty = array('','1. lékařská faktulta Univerzity Karlovy','2. lékařská fakulta Univerzity Karlovy','3. lékařská fakulta Univerzity Karlovy','Lékařská fakulta Masarykovy univerzity',
    'Lékařská fakulta Univerzity Karlovy v Hradci Králové','Lékařská fakulta Univerzity Karlovy v Plzni','Lékařská fakulta Univerzity Palackého v Olomouci','Jesseniova lekárska fakulta v Martine Univerzity Komenského',
    'Lekárska fakulta Univerzity Komenského v Bratislave', 'Lekárska fakulta Univerzity Pavla Jozefa Šafárika v Košiciach', 'Lekárska fakulta Slovenskej zdravotníckej univerzity','Fakulta vojenského zdravotnictví Univerzity obrany');

$profese = array('','Asistent ochrany veřejného zdraví','Asistent zubního technika','Autoptický laborant','Biomedicíncký inženýr','Biomedicíncký technik','Dentální hygienistka','Dezinfektor','Ergoterapeut',
	'Farmaceutický asistent','Fyzioterapeut','Klinický logoped','Laboratorní asistent','Laboratorní pracovník','Masér/nevidomý a slabozraký masér','Nutriční asistent','Nutriční terapeut',
	'Odborný pracovník v laboratorních metodách a v přípravě léčivých přípravků','Odborný pracovník v ochraně veřejného zdraví','Optometrista','Ortoptista','Ortoticko-protetický technik','Ortotik-protetik',
	'Ošetřovatel','Porodní asistentka','Psycholog ve zdravotnictví/klinický psycholog','Radiologický asistent','Radiologický fyzik','Radiologický technik','Řidič dopravy nemocných a raněných',
	'Řidič vozidla zdravotnické záchranné služby','Sanitář','Všeobecná sestra','Zdravotně-sociální pracovník','Zdravotnický asistent','Zdravotnický záchranář','Zdravotní laborant','Zubní instrumentářka','Zubní technik'
);
$fakulty_farmacie = array('','Farmaceutická fakulta Univerzity Karlovy Hradec Králové','Farmaceutická fakulta Veterinární a farmaceutické univerzity Brno','Univerzita veterinárskeho lekárstva a farmácie v Košiciach',
                        'Farmaceutická fakulta Univerzity Komenského v Bratislave');


$currentDate = Zend_Date::now();

// Pokud byl formular jiz odeslan, dostali jsme jej z controlleru a je nevalidni
if(!empty($this->form)){
    $form = $this->form;
}
else{
    // Potrebujeme random string generator
    $rsg = new Ibulletin_RandomStringGenerator();

    // Definice formulare kvuli validaci v controlleru bez znalosti formulare v controlleru
    // formular jde do controlleru ulozeny v session
    $form = new Form();
    $form->addElement('text', 'name', array(
                'required' => true,
                'label' => 'Jméno *',
                'validators' => array(
                    array('NotEmpty', true,
                         array('messages' => array('isEmpty' => "Pole nesmí být prázdné."))),
                    array('StringLength', true,
                        array(2, 'messages' => array('stringLengthTooShort' => "Jméno musí mít alespoň 2 znaky.")))
                )
        ));

    $form->addElement('text', 'surname', array(
                'required' => true,
                'label' => 'Příjmení *',
                'validators' => array(
                    array('NotEmpty', true,
                         array('messages' => array('isEmpty' => "Pole nesmí být prázdné."))),
                    array('StringLength', true,
                        array(2, 'messages' => array('stringLengthTooShort' => "Příjmení musí mít alespoň 2 znaky.")))
                )
        ));

	$form->addElement('checkbox', 'gdpr_global',array(
	    'label' => 'Obchodní sdělení PHC a třetích stran z oblasti biomedicíny a farmacie',
		'checkedValue' => '1',
        'uncheckedValue' => null
	));

	$form->addElement('hidden', 'gdpr_global_timestamp');

	$form->addElement('checkbox', 'gdpr_project', array(
		'required' => true,
		'label' => 'Informace a novinky týkající se projektu XY *',
		'checkedValue' => '1',
		'uncheckedValue' => null,
		'validators' => array(
			array('NotEmpty', true,
				array('messages' => array('isEmpty' => "Povolte zasílání informací z projektu"))),
		)
	));
	$form->addElement('hidden', 'gdpr_project_timestamp');

	$checkboxDecorator = array(
		'ViewHelper',
		array('SimpleLabel',array('placement'=>'append')),
		'Errors'
	);

	$form->getElement('gdpr_global')->setDecorators($checkboxDecorator);
	$form->getElement('gdpr_project')->setDecorators($checkboxDecorator);

	$form->addElement('text', 'email', array(
	    'label' => 'Email *',
		'required' => true,
		'validators' => array(
			array('NotEmpty', true,
				array('messages' => array('isEmpty' => "Zadejte e-mail"))),
			array('EmailAddress', true,
				array('messages' => array(Zend_Validate_EmailAddress::INVALID_FORMAT => 'Byl zadán neplatný e-mail'))),
		)
	));
	$form->addElement('text', 'degree_before', array(
		'required' => false,
        'label' => 'Titul před'
	));
	$form->addElement('text', 'degree_after', array(
		'required' => false,
        'label' => 'Titul za'
	));
	$form->addElement('select', 'profession', array(
		'required' => true,
		'attribs' => array(
		        'class'=>'select2-pov',
                'data-placeholder'=>'Povolání *',
                'data-minimum-results-for-search'=>'-1',
                'data-allow-clear'=>'1'
        ),
		'multioptions' => array_combine($povolani, $povolani),
		'validators' => array(
			array('NotEmpty', true,
				array('messages' => array('isEmpty' => "Vyberte povolání"))),
		)
	));
	$form->addElement('select', 'specialization_physician', array(
		'allowEmpty' => false,
		'multioptions' => array_combine($specializations, $specializations),
		'attribs' => array(
			'class'=>'select2 select2-specializace',
			'data-placeholder'=>'Specializace *',
			'data-allow-clear'=>'1'
		),
		'validators' => array(
			array('Callback', true,
				array(
					'callback' => array('RegisterController','specializationValidate'),
					'messages' => array(Zend_Validate_Callback::INVALID_VALUE => 'Vyberte specializaci')
				)
			)
		)
	));
	$form->addElement('select', 'specialization_pharmacist', array(
		'required' => false,
		'multioptions' => array_combine($odbornost,$odbornost),
		'attribs' => array(
		        'class'=>'select2 select2-odbornost',
                'data-placeholder'=>'Specializace',
			    'data-minimum-results-for-search'=>'-1',
                'data-allow-clear'=>'1'
        )
	));
	$form->addElement('select', 'school_physician', array(
		'required' => false,
		'multioptions' => array_combine($fakulty,$fakulty),
		'attribs' => array(
			'class'=>'select2 select2-fakulta',
			'data-placeholder'=>'Fakulta',
			'data-minimum-results-for-search'=>'-1',
			'data-allow-clear'=>'1')
    ));

	$form->addElement('select', 'school_pharmacist', array(
		'required' => false,
		'multioptions' => array_combine($fakulty_farmacie,$fakulty_farmacie),
		'attribs' => array(
			'class'=>'select2 select2-fakulta',
			'data-placeholder'=>'Fakulta',
			'data-minimum-results-for-search'=>'-1',
			'data-allow-clear'=>'1')
	));

	$form->addElement('select', 'specialization_non_physician', array(
		'required' => false,
		'multioptions' => array_combine($profese, $profese),
		'attribs' => array(
			'class'=>'select2 select2-profese',
			'data-placeholder'=>'Specializace',
			'data-allow-clear'=>'1')
	));
	$form->addElement('select', 'state', array(
		'required' => true,
		'multioptions' => array_combine($states,$states),
		'validators' => array(
			array('NotEmpty', true,
				array('messages' => array('isEmpty' => "Vyberte stát"))),
		),
		'attribs' => array(
			'class'=>'select2',
			'data-placeholder'=>'Stát ve kterém pracujete *',
			'data-minimum-results-for-search'=>'-1',
			'data-allow-clear'=>'1')
	));


    // Najdeme nepouzity hash pro formular
    while(1){
        $hash = $rsg->get(15);
        if(!isset($session->existingForms[$hash])){
            break;
        }
    }
    $form->addElement('hidden', 'hash', array('value' => $hash));


    // Ulozime formular do session s pomoci hashe
    if(!isset($session->existingForms)){
        $session->existingForms = array();
    }
    // Ukladame serializovane, protoze jinak se vytvori podivna vazba na View Helper Text
    // a vse kolabuje pri spusteni session
    $session->existingForms[$hash] = serialize($form);

}

$texts = Ibulletin_Texts::getSet('register');

// ==============================================================================================//
?>

<?=$this->render('head.phtml')?>

<body class="gdpr">
<div id="page">
    <h1><?= $texts->index->title ?></h1>
    <p><?= $this->main ?></p>
    <p>
        Těší nás, že chcete být součástí <?=$this->project_name?>. Abychom pro Vás i nadále mohli tvořit zajímavý obsah, který můžete studovat
        ZDARMA, obnovte prosím souhlas podle požadavků EU. Předem děkujeme za Vaši přízeň, které si moc vážíme.
    </p>
        Souhlasím s tím, aby společnost <span data-tooltip="Správce osobních údajů je společnost Pears Health Cyber, s.r.o.,<br>
            IČ: 25784684, se sídlem DOCK01, Voctářova 2449/5, 180 00<br> Tel.: +420 272 732 996.<br>
            Kontakt na pověřence pro ochranu osobních údajů: <a href='mailto:dpo@pearshealthcyber.com'>dpo@pearshealthcyber.com</a>.
            <br>Více informací na <a href='http://www.pearshealthcyber.com' target='_blank'>www.pearshealthcyber.com</a>.">Pears Health Cyber s.r.o.</span> (dále jen
        „PHC“), zpracovávala mé osobní údaje uvedené níže a další osobní údaje o mé osobě, které zpřístupním PHC, a to za
        účelem realizace tohoto projektu, zasílání vybraných sdělení včetně pozvánek do dalších projektů na mou
        e-mailovou adresu a vyhodnocování veškerých údajů získaných v této souvislosti.
    </p>
	<? if ( ! empty($this->loginError)) { ?>
        <p class="error"><?= $this->loginError ?></p>
	<? } ?>
    <form class="incampaign-register-form" action="" method="post">
		<?= $form->getElement('hash') ?>
        <p>Chci dostávat: (prosím zaškrtněte jednu či více z následujících možností)</p>
            <div class="checkbox">
				<?= $form->getElement('gdpr_project') ?>
				<?= $form->getElement('gdpr_project_timestamp') ?>
            </div>
            <div class="checkbox">
				<?= $form->getElement('gdpr_global') ?>
				<?= $form->getElement('gdpr_global_timestamp') ?>
            </div>
            <div class="input input-fl" style="padding-right:15px">
				<?= $form->getElement('degree_before') ?>
            </div>
            <div class="input input-fl">
				<?= $form->getElement('degree_after') ?>
            </div>
            <div class="cr"></div>
            <div class="input input-fl" style="padding-right:15px">
				<?= $form->getElement('name') ?>
            </div>
            <div class="input input-fl">
				<?= $form->getElement('surname') ?>
            </div>
            <div class="cr"></div>
            <div class="povolani input">
				<?= $form->getElement('profession') ?>
            </div>
            <div class="specializace input pov">
				<?= $form->getElement('specialization_physician') ?>
            </div>
            <div class="odbornost input pov">
				<?= $form->getElement('specialization_pharmacist') ?>
            </div>
            <div class="fakulta input pov">
				<?= $form->getElement('school_physician') ?>
            </div>
            <div class="fakulta-farmacie input pov">
				<?= $form->getElement('school_pharmacist') ?>
            </div>
            <div class="profese input pov">
				<?= $form->getElement('specialization_non_physician') ?>
            </div>
            <div class="email input">
				<?= $form->getElement('email') ?>
            </div>
            <div class="state input">
				<?= $form->getElement('state') ?>
            </div>
            <p class="law2 rights">
                Potvrzuji, že jsem odborníkem ve smyslu § 2a zákona č. 40/1995 Sb., o regulaci reklamy, ve znění pozdějších předpisů, tj. "osobou způsobilou předepisovat nebo vydávat léčivé přípravky".</p>
            <p class="rights">
                Pro zobrazení bližších informací a poučení o zpracování Vašich osobních údajů prosím klikněte <a
                        href="javascript:inpopup.showPopup()">ZDE</a>.
            </p>
            <button class="button" type="submit" name="submit" value="Odeslat" title="Odeslat">Souhlasím a odeslat
            </button>
        <!-- POPUPY -->
        <div id="inpopup" data-show-onload="false">
            <div>
                <h1>Informace a poučení o zpracování Vašich osobních údajů</h1>
                <p>
                    Souhlas se zpracováním osobních údajů uvedených v registračním formuláři a zpřístupněných PHC
                    na základě tohoto souhlasu poskytuji zcela dobrovolně na dobu neurčitou a tento svůj souhlas
                    mohu kdykoli odvolat, aniž by tím byla dotčena zákonnost zpracování založeného na souhlasu
                    uděleném před jeho odvoláním. Beru na vědomí, že v souvislosti se zpracováním osobních údajů
                    dle tohoto souhlasu mám vůči PHC právo na přístup ke svým osobním údajům, právo na jejich opravu
                    a také právo na výmaz osobních údajů, zejména pokud odvolám svůj souhlas zasláním žádosti na
                    <a href="mailto:delete@pearshealthcyber.com">delete@pearshealthcyber.com</a>
                    a nebude existovat žádný jiný právní důvod pro zpracování těchto údajů.
                </p>
                <p>Dále mám také právo vznést námitku, a to především námitku proti zpracování pro účely přímého marketingu
                    včetně zasílání informačních e-mailů, po jejímž uplatnění nebudou osobní údaje již pro tyto účely
                    zpracovávány. Konečně beru také na vědomí, že mám právo na přenositelnost údajů a také právo se
                    obrátit s případnou stížností na příslušný dozorový úřad v členském státě svého obvyklého bydliště, místa výkonu zaměstnání nebo místa, kde došlo k porušení předpisů o ochraně osobních údajů.
                </p>
                <p>
                    Pro uplatnění svých práv, pokud není výše uvedeno jinak, nebo v&nbsp;případě potřeby bližších informací
                    týkajících
                    se zpracování osobních údajů mohu kontaktovat PHC prostřednictvím emailu na adrese
                    <a href="mailto:dpo@pearshelathcyber.com">dpo@pearshelathcyber.com</a>.
                </p>
                <p class="text-center">
                    <a class="btn" href="javascript:inpopup.closePopup();">Zpět</a>
                </p>
            </div>
        </div>
    </form>
</div>
    <script type="text/javascript">

		var inpopup = new InPopup({id: 'inpopup'});

		var showInput = function (pov) {

			$('.law2').hide();
			$('.pov').hide();

			if (pov == "Lékař") {
				$('.specializace').show();
				$('.law2').show();
			} else if (pov == "Lékárník") {
				$('.odbornost').show();
				$('.law2').show();
			} else if (pov == "Student medicíny") {
				$('.fakulta').show();
			} else if (pov == "Student farmacie") {
				$('.fakulta-farmacie').show();
			} else if (pov == "Nelékařské profese") {
				$('.profese').show();
			}
		};

		showInput($('.select2-pov').val());

		$('.select2').select2({
			width: '100%',
			language: {
				noResults: function (params) {
					return "žádné výsledky nebyly nalezeny";
				}
			}
		});

		$('.select2-pov').select2({
			width: '100%'
		});

		$('.select2-pov').on('change', function () {
			$('.pov').find('.select2').val(null).trigger('change');
			showInput($(this).val());
		});

		$('.select2-profese').on('change', function () {
			$('.law2').hide();
			if ($(this).val() == "Farmaceutický asistent") {
				$('.law2').show();
            }
		});

		$(document).on('change', '[name="gdpr_project"],[name="gdpr_global"]', function () {
			var date = "<?=$currentDate->toString('YYYY-MM-dd');?>";
			var name = $(this).attr('name') + '_timestamp';
			$("[name='" + name + "']").val(date);
		});

		//TOOLTIP
		$(document).on('click', '[data-tooltip]', function (e) {

			showTooltip($(this), false);
		});

		$(document).on('mouseenter', '[data-tooltip]', function (e) {
			showTooltip($(this), true);
		});

		$(document).on('mouseleave', '[data-tooltip]', function (e) {
			closeTooltip($(this), true);
		});

		$(document).on('click', function (e) {
			//closeTooltip($(this), false);
		});

		//Tooltip
		var showTooltip = function (el, delay) {

			var tooltip = el.find('.tooltip');

			if (tooltip.length == 0) {
				tooltip = $('<span class="tooltip">' + el.data('tooltip') + '</span>');
				var marginBottom = el.outerHeight(true)*1.25;
				var elOffset = el.offset();
				tooltip.appendTo($('body'));

                var tooltipWidth = tooltip.outerWidth(true);
                var tooltipHeight = tooltip.outerHeight(true);

				tooltip.css('position','absolute');
				tooltip.css('z-index','100');

				var shiftLeft = 20;

				if((elOffset.left - (tooltipWidth/2)) < 0) {
					shiftLeft = -1 * (elOffset.left - (tooltipWidth/2));
                } else if ((elOffset.left + (tooltipWidth/2) - $(window).width()) > 0) {
					shiftLeft = -1 * (elOffset.left + (tooltipWidth/2) - $(window).width());
                }

				tooltip.css('left',elOffset.left + shiftLeft);
				tooltip.css('top',elOffset.top-tooltipHeight);
				tooltip.css('height',tooltipHeight);

			}

			if (tooltip.hasClass('active')) {
				tooltip.clearQueue();
				return true;
			}

			tooltip.css('overflow','visible');

			if (delay) {
				tooltip.delay(800).queue(function(next){
					tooltip.addClass('active');
					next();
				});
				tooltip.fadeIn();
			} else {
				tooltip.addClass('active').slideDown()
			}

		};

		var closeTooltip = function (el, delay) {

			var tooltip = $('body').find('.tooltip');

			if (!tooltip.hasClass('active')) {
				tooltip.clearQueue();
				return true;
			}

			if (delay) {
				tooltip.delay(800).fadeOut(400, function(){
					tooltip.detach();
				});
			} else {
				tooltip.fadeOut(400, function(){
					tooltip.detach();
				});
			}
		};

    </script>

	<?= $this->render('bottom_login.phtml') ?>
