<?
/* FILEMANAGER */
$lang = Ibulletin_AdminAuth::getInstance()->user_data->language;
if ($lang == "cz") {
    $lang = "cs";
}
$id = Zend_Controller_Front::getInstance()->getRequest()->getParam('id');
$controller = Zend_Controller_Front::getInstance()->getRequest()->getControllerName();

//odkaz na editaci
$editurl = $this->url(array('controller'=>'edit','action'=>'index','control'=>$controller)).'?basepath='.rawurlencode($this->cpath).'&fhash=';
$connectorurl = $this->url(array('controller'=>'filemanager','action'=>'elfinder-connector','id'=>$id,'cpath'=> rawurlencode($this->cpath)));
$postsaveurl = $this->url(array('action'=>'postsave'));

$maxUploadSize = min(Utils::letToNum(ini_get('post_max_size')), Utils::letToNum(ini_get('upload_max_filesize')));
$maxUploadSizeReadable = (int) ($maxUploadSize / 1048576);

?>

<script type="text/javascript" src="pub/scripts/elfinder/js/elfinder.full.js"></script>

<? if ($lang && $lang != 'en'): ?>
<script type="text/javascript" src="pub/scripts/elfinder/js/i18n/elfinder.<?= $lang ?>.js"></script>
<? endif; ?>

<link rel="stylesheet" type="text/css" href="pub/scripts/elfinder/css/elfinder.min.css">
<link rel="stylesheet" type="text/css" href="pub/scripts/elfinder/css/theme.css">

<h3><?= $this->text('file_uploader.main.name') ?></h3>
<p><?=sprintf($this->text('file_uploader.upload.legend'),$maxUploadSizeReadable)?></p>
<div style="font-size:14px;margin-bottom:10px;"><div id="elfinder"></div></div>

<script type="text/javascript" charset="utf-8">
    
    elFinder.prototype._options.commands.push('editext');
    elFinder.prototype._options.commands.push('downall');
    elFinder.prototype._options.contextmenu.files.push('editext');
    elFinder.prototype.i18.en.messages['cmdeditext'] = 'Edit';
    elFinder.prototype.i18.en.messages['cmddownall'] = 'Download folder';

    elFinder.prototype.commands.editext = function () {
        
        this.exec = function () {
            
            var dfrd = $.Deferred();

            if (this.getstate() === -1) {
                return dfrd.reject();
            }
            var files = this.files();
            window.open('<?=$editurl?>'+files[0].hash);

            return dfrd.resolve();
        };
        
        this.getstate = function() {
            var files = this.files();
            if (files.length === 1) {
                if(files[0].mime.indexOf('text/')===0) {
                    return 0;
                }
            }
            return -1;
        };
    };
    
    //Stazeni vybrane sloky jako zip
    elFinder.prototype.commands.downall = function () {
       
       this.exec = function () {
           $('.downloader').remove();
           var url = this.fm.options.url+'?cmd=downall&folder='+this.fm.cwd().hash;
           console.log(url);
           var id = 'downloader-'+ this.fm.cwd().hash;
           var iframe = '<iframe class="downloader" id="'+ id +'" style="display:none" src='+url+'"/>';
            
           $(iframe)
			.appendTo('body');
        };
       
       this.getstate = function() {
            return 0;
        };
    };


    // Documentation for client options:
    // https://github.com/Studio-42/elFinder/wiki/Client-configuration-options
    $(document).ready(function () {
        $('#elfinder').elfinder({
            url: '<?=$connectorurl?>',
            resizable: false,
            lang: '<?= $lang ?>',
            defaultView: 'list',
            rememberLastDir: false,
            useBrowserHistory: false,
            commands: [
                'open', 'reload', 'home', 'up', 'back', 'forward', 'getfile', 'quicklook',
                'download', 'rm', 'duplicate', 'rename', 'mkdir', 'mkfile', 'upload', 'copy',
                'cut', 'paste','search', 'info', 'view', 'help','extract',
                'sort', 'editext', 'reload', 'home', 'up','downall'
            ],
            uiOptions: {
                // toolbar configuration
                toolbar: [
                    ['back', 'forward', 'home', 'up'],
                    ['reload'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download', 'getfile'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'editext'],
                    ['search'],
                    ['view', 'sort'],
                    ['downall']
                ]
            },
            sync: 60000,
            contextmenu: {
                // navbarfolder menu
                navbar: ['open', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'places', 'info'],
                // current directory menu
                cwd: ['reload', 'back', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'sort', '|', 'info'],
                // current directory file menu
                files: ['getfile', '|', 'open', 'quicklook', '|', 'download', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'editext', 'rename', '|', 'info']
            },
            handlers: {
                upload: function (event, instance) {
                    var uploadedFiles = event.data.added;
                    var archives = ['application/zip', 'application/x-gzip', 'application/x-tar', 'application/x-bzip2'];
                    for (i in uploadedFiles) {
                        var file = uploadedFiles[i];
                        if (jQuery.inArray(file.mime, archives) >= 0) {
                            instance.exec('extract', file.hash);
                        }
                    }
                    postsave();
                },
                remove: function (event, instance) {
                    postsave();
                },
                paste: function (event, instance) {
                    postsave();
                },
                duplicate: function (event, instance) {
                    postsave();
                },
                mkfile: function (event, instance) {
                    postsave();
                },
                dblclick:function(event, instance) {
                    event.preventDefault();
                     instance.exec('editext').fail(function() {
                        instance.exec('open');   
                    });
                }
                
            }
        });
        
        var postsave = function() {
            var request = $.ajax('<?=$postsaveurl?>',
            {
                cache: false,
                dataType: 'html',
                success: function(data) {
                    //info hlaska po postsave
                    $('.popmsg').remove();
                    var popmsg = $('<div style="display:none;position:fixed;top:33px;left:0;z-index:1000;" class="popmsg"></div>');
                    popmsg.html(data);
                    popmsg.appendTo('body');
                    popmsg.fadeIn(1000);
                    setTimeout(function() {
                        popmsg.fadeOut(1000,function(){$(this).remove();});
                    },7000);
                }
            });
            
        };

    });
</script>



